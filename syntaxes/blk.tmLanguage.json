{
  "$schema": "https://raw.githubusercontent.com/martinring/tmlanguage/master/tmlanguage.json",
  "name": "BLK",
  "scopeName": "source.blk",
  "patterns": [
    {
      "include": "#comments"
    },
    {
      "include": "#blocks"
    },
    {
      "include": "#parameters"
    }
  ],
  "repository": {
    "comments": {
      "patterns": [
        {
          "name": "comment.line.double-slash.blk",
          "match": "//.*$"
        },
        {
          "name": "comment.block.blk",
          "begin": "/\\*",
          "end": "\\*/"
        }
      ]
    },
    "blocks": {
      "patterns": [
        {
          "name": "meta.block.blk",
          "begin": "((?:\"[^\"]*\"|[-a-zA-Z0-9_.]+))\\s*({)",
          "beginCaptures": {
            "1": {
              "name": "entity.name.class.blk"
            },
            "2": {
              "name": "punctuation.definition.block.begin.blk"
            }
          },
          "end": "}",
          "endCaptures": {
            "0": {
              "name": "punctuation.definition.block.end.blk"
            }
          },
          "patterns": [
            {
              "include": "$self"
            }
          ]
        }
      ]
    },
    "parameters": {
      "patterns": [
        {
          "name": "meta.parameter.matrix.blk",
          "match": "((?:\"[^\"]*\"|[-a-zA-Z0-9_.:]+))(:m)\\s*=\\s*\\[\\[([-]?\\d*\\.?\\d+(?:[eE][-+]?\\d+)?)\\s*,\\s*([-]?\\d*\\.?\\d+(?:[eE][-+]?\\d+)?)\\s*,\\s*([-]?\\d*\\.?\\d+(?:[eE][-+]?\\d+)?)\\]\\s*\\[([-]?\\d*\\.?\\d+(?:[eE][-+]?\\d+)?)\\s*,\\s*([-]?\\d*\\.?\\d+(?:[eE][-+]?\\d+)?)\\s*,\\s*([-]?\\d*\\.?\\d+(?:[eE][-+]?\\d+)?)\\]\\s*\\[([-]?\\d*\\.?\\d+(?:[eE][-+]?\\d+)?)\\s*,\\s*([-]?\\d*\\.?\\d+(?:[eE][-+]?\\d+)?)\\s*,\\s*([-]?\\d*\\.?\\d+(?:[eE][-+]?\\d+)?)\\]\\s*\\[([-]?\\d*\\.?\\d+(?:[eE][-+]?\\d+)?)\\s*,\\s*([-]?\\d*\\.?\\d+(?:[eE][-+]?\\d+)?)\\s*,\\s*([-]?\\d*\\.?\\d+(?:[eE][-+]?\\d+)?)\\]\\](\\s*;)?",
          "captures": {
            "1": {
              "name": "variable.other.property.blk"
            },
            "2": {
              "name": "storage.type.annotation.blk"
            },
            "3": {
              "name": "constant.numeric.float.decimal.blk"
            },
            "4": {
              "name": "constant.numeric.float.decimal.blk"
            },
            "5": {
              "name": "constant.numeric.float.decimal.blk"
            },
            "6": {
              "name": "constant.numeric.float.decimal.blk"
            },
            "7": {
              "name": "constant.numeric.float.decimal.blk"
            },
            "8": {
              "name": "constant.numeric.float.decimal.blk"
            },
            "9": {
              "name": "constant.numeric.float.decimal.blk"
            },
            "10": {
              "name": "constant.numeric.float.decimal.blk"
            },
            "11": {
              "name": "constant.numeric.float.decimal.blk"
            },
            "12": {
              "name": "constant.numeric.float.decimal.blk"
            },
            "13": {
              "name": "constant.numeric.float.decimal.blk"
            },
            "14": {
              "name": "constant.numeric.float.decimal.blk"
            },
            "15": {
              "name": "punctuation.terminator.statement.blk"
            }
          }
        },
        {
          "name": "meta.parameter.color.blk",
          "match": "((?:\"[^\"]*\"|[-a-zA-Z0-9_.:]+))(:c)\\s*=\\s*((?:[0-9]|[1-9][0-9]|1[0-9]{2}|2[0-4][0-9]|25[0-5]))\\s*,\\s*((?:[0-9]|[1-9][0-9]|1[0-9]{2}|2[0-4][0-9]|25[0-5]))\\s*,\\s*((?:[0-9]|[1-9][0-9]|1[0-9]{2}|2[0-4][0-9]|25[0-5]))((?:\\s*,\\s*(?:[0-9]|[1-9][0-9]|1[0-9]{2}|2[0-4][0-9]|25[0-5]))?)\\s*(;)?",
          "captures": {
            "1": {
              "name": "variable.other.property.blk"
            },
            "2": {
              "name": "storage.type.annotation.blk"
            },
            "3": {
              "name": "constant.numeric.integer.decimal.blk"
            },
            "4": {
              "name": "constant.numeric.integer.decimal.blk"
            },
            "5": {
              "name": "constant.numeric.integer.decimal.blk"
            },
            "6": {
              "name": "constant.numeric.integer.decimal.blk"
            },
            "7": {
              "name": "punctuation.terminator.statement.blk"
            }
          }
        },
        {
          "name": "meta.parameter.vector.float.blk",
          "match": "((?:\"[^\"]*\"|[-a-zA-Z0-9_.:]+))(:p[234])\\s*=\\s*([-]?\\d*\\.?\\d+(?:[eE][-+]?\\d+)?)\\s*(?:,\\s*([-]?\\d*\\.?\\d+(?:[eE][-+]?\\d+)?)\\s*(?:,\\s*([-]?\\d*\\.?\\d+(?:[eE][-+]?\\d+)?)\\s*(?:,\\s*([-]?\\d*\\.?\\d+(?:[eE][-+]?\\d+)?))?)?)?\\s*(;)?",
          "captures": {
            "1": {
              "name": "variable.other.property.blk"
            },
            "2": {
              "name": "storage.type.annotation.blk"
            },
            "3": {
              "name": "constant.numeric.float.decimal.blk"
            },
            "4": {
              "name": "constant.numeric.float.decimal.blk"
            },
            "5": {
              "name": "constant.numeric.float.decimal.blk"
            },
            "6": {
              "name": "constant.numeric.float.decimal.blk"
            },
            "7": {
              "name": "punctuation.terminator.statement.blk"
            }
          }
        },
        {
          "name": "meta.parameter.vector.integer.blk",
          "match": "((?:\"[^\"]*\"|[-a-zA-Z0-9_.:]+))(:ip[234])\\s*=\\s*([-]?\\d+)\\s*(?:,\\s*([-]?\\d+)\\s*(?:,\\s*([-]?\\d+)\\s*(?:,\\s*([-]?\\d+))?)?)?\\s*(;)?",
          "captures": {
            "1": {
              "name": "variable.other.property.blk"
            },
            "2": {
              "name": "storage.type.annotation.blk"
            },
            "3": {
              "name": "constant.numeric.integer.decimal.blk"
            },
            "4": {
              "name": "constant.numeric.integer.decimal.blk"
            },
            "5": {
              "name": "constant.numeric.integer.decimal.blk"
            },
            "6": {
              "name": "constant.numeric.integer.decimal.blk"
            },
            "7": {
              "name": "punctuation.terminator.statement.blk"
            }
          }
        },
        {
          "name": "meta.parameter.boolean.blk",
          "match": "((?:\"[^\"]*\"|[-a-zA-Z0-9_.:]+))(:b)\\s*=\\s*(true|false|yes|no|on|off|(?<!\\d)[01](?!\\d))(?![a-zA-Z])\\s*(;)?",
          "captures": {
            "1": {
              "name": "variable.other.property.blk"
            },
            "2": {
              "name": "storage.type.annotation.blk"
            },
            "3": {
              "name": "constant.language.boolean.blk"
            },
            "4": {
              "name": "punctuation.terminator.statement.blk"
            }
          }
        },
        {
          "name": "meta.parameter.integer.blk",
          "match": "((?:\"[^\"]*\"|[-a-zA-Z0-9_.:]+))(:(?:i64|i))\\s*=\\s*([-]?\\d+)(?!\\.\\d)\\s*(;)?",
          "captures": {
            "1": {
              "name": "variable.other.property.blk"
            },
            "2": {
              "name": "storage.type.annotation.blk"
            },
            "3": {
              "name": "constant.numeric.integer.decimal.blk"
            },
            "4": {
              "name": "punctuation.terminator.statement.blk"
            }
          }
        },
        {
          "name": "meta.parameter.float.blk",
          "match": "((?:\"[^\"]*\"|[-a-zA-Z0-9_.:]+))(:r)\\s*=\\s*([-]?\\d*\\.?\\d+(?:[eE][-+]?\\d+)?)\\s*(;)?",
          "captures": {
            "1": {
              "name": "variable.other.property.blk"
            },
            "2": {
              "name": "storage.type.annotation.blk"
            },
            "3": {
              "name": "constant.numeric.float.decimal.blk"
            },
            "4": {
              "name": "punctuation.terminator.statement.blk"
            }
          }
        },
        {
          "name": "meta.parameter.string.blk",
          "match": "((?:\"[^\"]*\"|[-a-zA-Z0-9_.:]+))(:t)\\s*=\\s*((?:\"[^\"]*\")|(?:'[^']*'))\\s*(;)?",
          "captures": {
            "1": {
              "name": "variable.other.property.blk"
            },
            "2": {
              "name": "storage.type.annotation.blk"
            },
            "3": {
              "name": "string.quoted.blk"
            },
            "4": {
              "name": "punctuation.terminator.statement.blk"
            }
          }
        },
        {
          "name": "meta.parameter.include.blk",
          "match": "\\b(include)\\s+((?:\"[^\"]*\")|(?:'[^']*'))\\s*(;)?",
          "captures": {
            "1": {
              "name": "keyword.control.import.include.blk"
            },
            "2": {
              "name": "string.quoted.blk"
            },
            "3": {
              "name": "punctuation.terminator.statement.blk"
            }
          }
        }
      ]
    }
  }
}